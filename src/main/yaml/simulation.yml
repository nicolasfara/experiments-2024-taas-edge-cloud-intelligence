incarnation: surrogatescafi

variables:
  seed: &seed
    min: 0
    max: 1
    step: 1
    default: 0
  spacing: &spacing
    type: ArbitraryVariable
    parameters: [0.25, [0.25, 0.5]]
  error: &error
    type: ArbitraryVariable
    parameters: [0.1, [0.1, 0.2]]
  #------------------------------------------------------------------
  programDag: &programDag
    language: scala
    formula: Map("it.unibo.alchemist.Gradient" -> List[String]())

seeds:
  scenario: *seed
  simulation: *seed

launcher:
  parameters:
    batch: [seed, spacing, error]

network-model:
  type: ConnectWithinDistance
  parameters: [0.5]

_constants:
  retentionTime: &retentionTime 25.0

_programs:
  - program: &surrogateGradient
    - time-distribution: 1
      type: Event
      actions:
        - type: RunSurrogateScafiProgram
          parameters: [ "it.unibo.alchemist.Main", *retentionTime, *programDag ]
    - program: sendSurrogate
  - program: &gradient
      - time-distribution: 1
        type: Event
        actions:
          - type: RunApplicationScafiProgram
            parameters: [ "it.unibo.alchemist.Main", *retentionTime, *programDag ]
      - program: send

deployments:
  - type: Grid
    parameters: [-5, -5, 5, 5, *spacing, *spacing, *error, *error]
    programs:
      - *gradient
    contents:
      - in:
          type: Rectangle
          parameters: [-6, -6, 2, 2]
        molecule: source
        concentration: true

terminate:
  type: AfterTime
  parameters: 150
